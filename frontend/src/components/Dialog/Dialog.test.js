// Dialog.test.js
import React from 'react';
import {render, screen, fireEvent, waitFor} from '@testing-library/react';
import '@testing-library/jest-dom';
import axios from 'axios';
import Dialog from './Dialog';

// –ú–æ–∫–∞–µ–º axios
jest.mock('axios');

describe('Dialog Component', () => {
    const mockYourMessage = 'Test message';

    beforeEach(() => {
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –º–æ–∫–∏ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —Ç–µ—Å—Ç–æ–º
        jest.clearAllMocks();
    });

    test('renders initial messages correctly', () => {
        render(<Dialog yourmessage={mockYourMessage}/>);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–æ—Å—å
        expect(screen.getByText(mockYourMessage)).toBeInTheDocument();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –±–æ—Ç –æ—Ç–≤–µ—Ç–∏–ª —Å –∫–Ω–æ–ø–∫–∞–º–∏
        expect(screen.getByText(/–ü—Ä–∏–≤–µ—Ç, —Å —á–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–µ–±–µ –ø–æ–º–æ—á—å/i)).toBeInTheDocument();
        expect(screen.getByText('üí∏ –ö–æ–º–∏—Å—Å–∏—è')).toBeInTheDocument();
        expect(screen.getByText('üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã')).toBeInTheDocument();
        expect(screen.getByText('üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞')).toBeInTheDocument();
    });

    test('handles commission button click', () => {
        render(<Dialog yourmessage={mockYourMessage}/>);

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–ö–æ–º–∏—Å—Å–∏—è"
        fireEvent.click(screen.getByText('üí∏ –ö–æ–º–∏—Å—Å–∏—è'));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª–æ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≤—ã–±–æ—Ä–µ –≤–∞–ª—é—Ç—ã
        expect(screen.getByText(/–í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É/i)).toBeInTheDocument();
    });

    test('handles currency exchange button click', () => {
        render(<Dialog yourmessage={mockYourMessage}/>);

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã"
        fireEvent.click(screen.getByText('üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã'));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∑–∏–ª—Å—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç TradeCurrency
        expect(screen.getByTestId('trade-currency')).toBeInTheDocument();
    });

    test('handles deposits button click', () => {
        render(<Dialog yourmessage={mockYourMessage}/>);

        // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞"
        fireEvent.click(screen.getByText('üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞'));

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª—Å—è –≤–æ–ø—Ä–æ—Å –æ –≤—ã–±–æ—Ä–µ
        expect(screen.getByText(/–ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç/i)).toBeInTheDocument();
        expect(screen.getByText('üíé –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç')).toBeInTheDocument();
        expect(screen.getByText('üì† –í–∫–ª–∞–¥—ã')).toBeInTheDocument();
    });

    describe('Commission calculation flow', () => {
        test('selects currency and country', async () => {
            render(<Dialog yourmessage={mockYourMessage}/>);

            // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–º–∏—Å—Å–∏–∏
            fireEvent.click(screen.getByText('üí∏ –ö–æ–º–∏—Å—Å–∏—è'));

            // –í—ã–±–∏—Ä–∞–µ–º –≤–∞–ª—é—Ç—É (–∏–º–∏—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Export)
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å'));

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É
            expect(screen.getByText(/–í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É/i)).toBeInTheDocument();

            // –í—ã–±–∏—Ä–∞–µ–º —Å—Ç—Ä–∞–Ω—É
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏—è')); // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ —Ç–∞–∫–∞—è —Å—Ç—Ä–∞–Ω–∞ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ —Å—É–º–º—É
            expect(screen.getByText(/–ù–∞–ø–∏—à–∏ —Å—É–º–º—É/i)).toBeInTheDocument();
        });

        test('handles valid amount input', async () => {
            render(<Dialog yourmessage={mockYourMessage}/>);

            // –ò–º–∏—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
            fireEvent.click(screen.getByText('üí∏ –ö–æ–º–∏—Å—Å–∏—è'));
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å'));
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏—è'));

            // –í–≤–æ–¥–∏–º –≤–∞–ª–∏–¥–Ω—É—é —Å—É–º–º—É
            const input = screen.getByRole('textbox');
            fireEvent.change(input, {target: {value: '1000'}});
            fireEvent.submit(input);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª—Å—è –≤—ã–±–æ—Ä –º–µ—Ç–æ–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
            await waitFor(() => {
                expect(screen.getByText(/–í—ã–±–µ—Ä–∏ –º–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞/i)).toBeInTheDocument();
            });
        });

        test('handles invalid amount input', async () => {
            render(<Dialog yourmessage={mockYourMessage}/>);

            // –ò–º–∏—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
            fireEvent.click(screen.getByText('üí∏ –ö–æ–º–∏—Å—Å–∏—è'));
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å'));
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏—è'));

            // –í–≤–æ–¥–∏–º –Ω–µ–≤–∞–ª–∏–¥–Ω—É—é —Å—É–º–º—É
            const input = screen.getByRole('textbox');
            fireEvent.change(input, {target: {value: 'invalid'}});
            fireEvent.submit(input);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            await waitFor(() => {
                expect(screen.getByText(/–¢—ã –≤–≤–µ–ª –Ω–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ/i)).toBeInTheDocument();
            });
        });

        test('completes commission calculation', async () => {
            // –ú–æ–∫–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç API
            const mockResponse = {
                data: {
                    commission: 50,
                    total: 1050,
                    exchange_rate: 1.0
                }
            };
            axios.post.mockResolvedValue(mockResponse);

            render(<Dialog yourmessage={mockYourMessage}/>);

            // –ò–º–∏—Ç–∏—Ä—É–µ–º –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –¥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
            fireEvent.click(screen.getByText('üí∏ –ö–æ–º–∏—Å—Å–∏—è'));
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å'));
            fireEvent.click(screen.getByText('–†–æ—Å—Å–∏—è'));

            const input = screen.getByRole('textbox');
            fireEvent.change(input, {target: {value: '1000'}});
            fireEvent.submit(input);

            // –í—ã–±–∏—Ä–∞–µ–º –º–µ—Ç–æ–¥ –ø–µ—Ä–µ–≤–æ–¥–∞
            await waitFor(() => {
                fireEvent.click(screen.getByText('KoronPay'));
            });

            // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥
            fireEvent.click(screen.getByText('–í—Å–µ –≤–µ—Ä–Ω–æ'));

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –∑–∞–ø—Ä–æ—Å –∏ –æ—Ç–æ–±—Ä–∞–∑–∏–ª–∞—Å—å —Ç–∞–±–ª–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            await waitFor(() => {
                expect(axios.post).toHaveBeenCalledTimes(1);
                expect(screen.getByTestId('commission-table')).toBeInTheDocument();
            });
        });
    });

    describe('Deposit selection flow', () => {
        test('navigates through deposit selection', async () => {
            render(<Dialog yourmessage={mockYourMessage}/>);

            // –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–±–æ—Ä–∞ –≤–∫–ª–∞–¥–∞
            fireEvent.click(screen.getByText('üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞'));
            fireEvent.click(screen.getByText('üì† –í–∫–ª–∞–¥—ã'));
            fireEvent.click(screen.getByText('üéØ –ü–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å –≤–∫–ª–∞–¥'));

            // –í—ã–±–∏—Ä–∞–µ–º –≤–∞–ª—é—Ç—É
            fireEvent.click(screen.getByText('–†—É–±–ª–∏'));

            // –í—ã–±–∏—Ä–∞–µ–º —Å—Ä–æ–∫
            fireEvent.click(screen.getByText('1 - 3 –º–µ—Å'));

            // –í—ã–±–∏—Ä–∞–µ–º —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
            fireEvent.click(screen.getByText('–ï–∂–µ–º–µ—Å—è—á–Ω–æ –Ω–∞ —Å—á–µ—Ç / –∫–∞—Ä—Ç—É'));

            // –í—ã–±–∏—Ä–∞–µ–º —É—Å–ª–æ–≤–∏–µ –¥–ª—è –Ω–∞–¥–±–∞–≤–∫–∏
            fireEvent.click(screen.getByText('1'));

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
            await waitFor(() => {
                expect(screen.getByText(/–¢–µ–±–µ –ø–æ–¥—Ö–æ–¥—è—Ç —Ç–∞–∫–∏–µ –≤–∫–ª–∞–¥—ã –∫–∞–∫/i)).toBeInTheDocument();
            });
        });
    });

    test('clears messages correctly', () => {
        render(<Dialog yourmessage={mockYourMessage}/>);

        // –ù–∞—Ö–æ–¥–∏–º –∏ –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—è, —á—Ç–æ –æ–Ω–∞ –µ—Å—Ç—å –≤ Smska)
        const clearButton = screen.getByLabelText('–û—á–∏—Å—Ç–∏—Ç—å');
        fireEvent.click(clearButton);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª–æ—Å—å –ø—Ä–æ—â–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        expect(screen.getByText(/–ü–æ–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –±—É–¥–µ—Ç –ø–æ–º–æ—â—å/i)).toBeInTheDocument();
    });
});