import React, {useEffect, useState} from "react";
import axios from "axios";
import Buttoni from "../Buttoni/Buttoni";
import Smska from "../Smska/Smska";
import Buttoniany from "../Buttoniany/Buttoniany";
import Export from "../Export/Export";
import TradeCurrency from "../TradeCurrency/TradeCurrency";
import './Dialog.css'
import Deposit from "../Deposit/Deposit";
import Deposit2 from "../Deposit/Nakopschet";
import EqualButtons from "../EqualButtons";
import Table from "../Table/Table";
import Vkladi from "../Vkladi/Vkladi";

export default function Dialog({yourmessage}) {
    const [valutauser, setValutauser] = useState('')
    const [valutate, setValutate] = useState('');
    const [money, setMoney] = useState(false);
    const [counts, setCounts] = useState(false);
    const [message, setMessage] = useState('');
    const [banker, setBank] = useState('');
    const [messages, setMessages] = useState([]);
    const [method, setMethod] = useState('');
    const [input, setInput] = useState("");
    const [country, setCountry] = useState('');
    const ClearMessages = () => {
        setMessage('')
        setMessages([
            {
                sender: 'bot-message', component: (
                    <Buttoniany
                        first="üëã –ü–æ–∫–∞, –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –±—É–¥–µ—Ç –ø–æ–º–æ—â—å, —è —Ç—É—Ç"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />
                )
            }
        ]);
    }
    const currencyMap = {
        "–£–∑–±–µ–∫—Å–∫–∏–π —Å–æ–º": "UZS",
        "–ö–∏—Ä–≥–∏–∑—Å–∫–∏–π —Å–æ–º": "KGS",
        "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å": "BYN",
        "–¢–∞–¥–∂–∏–∫—Å–∫–∏–π —Å–æ–º–æ–Ω–∏": "TJS",
        "–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å": "RUB",
        "–ê—Ä–º—è–Ω—Å–∫–∏–π –¥—Ä–∞–º": "AMD",
        "–ö–∞–∑–∞—Ö—Å–∫–∏–π —Ç–µ–Ω–≥–µ": "KZT",
        "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–π –º–∞–Ω–∞—Ç": "AZN",
        "–ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å": "CNY",
        "–í—å–µ—Ç–Ω–∞–º—Å–∫–∏–π –¥–æ–Ω–≥": "VND",
        "–ò—Ä–∞–Ω—Å–∫–∏–π —Ä–∏–∞–ª": "IRR",
        "–°–µ—Ä–±—Å–∫–∏–π –¥–∏–Ω–∞—Ä": "RSD",
        "–î–∏—Ä—Ö–∞–º –û–ê–≠": "AED",
        "–ù–æ–≤—ã–π –∏–∑—Ä–∞–∏–ª—å—Å–∫–∏–π —à–µ–∫–µ–ª—å": "ILS",
        "–ì—Ä—É–∑–∏–Ω—Å–∫–∏–π –ª–∞—Ä–∏": "GEL",
        "–ï–≤—Ä–æ": "EUR",
        "–Æ–∂–Ω–æ–∫–æ—Ä–µ–π—Å–∫–∞—è –≤–æ–Ω–∞": "KRW",
        "–¢—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞": "TRY",
        "–ú–æ–Ω–≥–æ–ª—å—Å–∫–∏–π —Ç—É–≥—Ä–∏–∫": "MNT",
        "–ú–æ–ª–¥–∞–≤—Å–∫–∏–π –ª–µ–π": "MDL",
        "–¢–∞–π—Å–∫–∏–π –±–∞—Ç": "THB",
        "–ò–Ω–¥–æ–Ω–µ–∑–∏–π—Å–∫–∞—è —Ä—É–ø–∏—è": "IDR",
        "–ò–Ω–¥–∏–π—Å–∫–∞—è —Ä—É–ø–∏—è": "INR",
        "–§–∏–ª–∏–ø–ø–∏–Ω—Å–∫–æ–µ –ø–µ—Å–æ": "PHP"
    };
    const paymentMethods = {
        "KoronPay": "KoronPay",
        "Unistream": "unistream",
        "IBAN": "IBAN",
        "–ü–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞": "mobile",
        "–ü–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã": "bank_card",
        "–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞": "account number",
        "–ù–∞–ª–∏—á–Ω—ã–µ": "cash",
        "–ü–æ –§–ò–û": "FN"
    };
    const point = {
        Balance: 0,
        Plus: 0,
        Money: 0,
        Kopit: 0,
        Big: 0,
        Vozmozh: 0,
    }
    const pointnames = {
        Balance: '–í –±–∞–ª–∞–Ω—Å–µ',
        Plus: '–í –ø–ª—é—Å–µ',
        Money: '–ù–æ–≤—ã–µ –¥–µ–Ω—å–≥–∏',
        Kopit: '–ö–æ–ø–∏—Ç—å',
        Big: '–ë–æ–ª—å—à–∞—è –í—ã–≥–æ–¥–∞',
        Vozmozh: '–†–∞—Å—à–∏—Ä—è–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
    }

    const comissia = () => {
        setMessage('')
        console.log("comissia")
        setMessages(prev => [
            ...prev,
            {sender: 'user-message', text: '–†–∞—Å—Å—á–∏—Ç–∞–π –∫–æ–º–∏—Å—Å–∏—é'},
            {
                sender: 'bot-message',
                component: (
                    <>
                        <p>üí± –í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É</p>
                        <Export func={countries} choose={2}/>
                    </>
                ),
            },
        ]);
    };

    useEffect(() => {
        if (yourmessage) {
             setMessages([
            {sender: 'user-message', text: yourmessage},
            {
                sender: 'bot-message',
                component: (
                    <Buttoniany
                        first="üëã –ü—Ä–∏–≤–µ—Ç, —Å —á–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–µ–±–µ –ø–æ–º–æ—á—å?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />
                ),
            },
        ]);

        } else {
            setMessages([
            {
                sender: 'bot-message',
                component: (
                    <Buttoniany
                        first="üëã –ü—Ä–∏–≤–µ—Ç, —Å —á–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–µ–±–µ –ø–æ–º–æ—á—å?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />
                ),
            },
        ]);
        }

    }, []);
    const countries = (valu) => {
        setMessage('')
        setValutauser(valu)
        setValutate(currencyMap[valu]);
        setMessages(prev => [
            ...prev,
            {sender: 'user-message', text: valu},
            {
                sender: 'bot-message', component: (
                    <>
                        <p>üåè –í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É –≤ –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥</p>
                        <Export func={valuta} choose={1}/>
                    </>
                )
            }
        ]);
    }
    const vkladiandscheta = (info) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: info},
            {
                sender: 'bot-message', component: (
                    <Buttoniany
                        first={'üßê –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç '}
                        buttons={['üíé –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç', 'üì† –í–∫–ª–∞–¥—ã']}
                        onClickHandler={[nakopschet, vklad]}
                    />
                )
            }
        ])
    };
    const nakopschet = (text) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: text},
            {
                sender: 'bot-message', component: (
                    <>
                        <div className="promo-banner">
                            <h2>üíº –ü–æ—á–µ–º—É –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç?</h2>
                            <p>
                                –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á—ë—Ç ‚Äî –Ω–∞–¥—ë–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –ø—Ä–∏—É–º–Ω–æ–∂–µ–Ω–∏—è —Å—Ä–µ–¥—Å—Ç–≤ –∑–∞ —Å—á—ë—Ç
                                —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤. –ü–æ–º–æ–≥–∞–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å ¬´–ø–æ–¥—É—à–∫—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏¬ª, –¥–æ—Å—Ç–∏—á—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö
                                —Ü–µ–ª–µ–π –∏ —Å–ø–æ–∫–æ–π–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –±—É–¥—É—â–µ–µ. üåôüí∏
                            </p>
                        </div>

                        <Buttoniany
                            first={''}
                            buttons={['üß© –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞', 'üéØ –ü–æ–º–æ–≥–∏ –≤—ã–±—Ä–∞—Ç—å', '‚ú® –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Å—á–µ—Ç–∞', 'üîô –ù–∞–∑–∞–¥']}
                            onClickHandler={[nakopschetinfo, nakopshetchoose, nakopshetcategor, vkladiandscheta]}
                        />
                    </>

                )
            }
        ])
    }
    const nakopshetcategor = (info) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: info},
            {
                sender: 'bot-message', component: (
                    <>
                        <p>–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞—à–µ–º –±–∞–Ω–∫–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –∑–¥–µ—Å—å üëâ </p>
                        <a href="https://www.gazprombank.ru/personal/increase/deposits/">–ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–µ —Å—á–µ—Ç–∞</a>
                    </>
                )
            },
            {
                sender: 'bot-message', component: (
                    <Buttoniany
                        first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />

                )
            }


        ])
    }
    const nakopshetchoose = (info) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: info},
            {
                sender: 'bot-message', component: (
                    <Buttoni first={'üëÄ –°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –≤—ã —Ö–æ—Ç–∏—Ç–µ –¥–µ—Ä–∂–∞—Ç—å –Ω–∞ —Å—á—ë—Ç–µ?'}
                             buttons={['üòé –î–æ 10 –º–ª–Ω', 'ü§ë –°–≤—ã—à–µ 10 –º–ª–Ω']}
                             onClickHandler={nakopshetchoosestep2}
                    />
                )
            }
        ])
    }
    const nakopshetchoosestep2 = (choose) => {
        if (choose === 'üòé –î–æ 10 –º–ª–Ω') {
            setMoney(true)
        } else {
            setMoney(false)
        }
        console.log(choose)

        setMessages(prev => [...prev,
            {sender: 'user-message', text: choose},
            {
                sender: 'bot-message', component: (
                    <Buttoni
                        first={'üëæ –ë—É–¥–µ—Ç–µ –ª–∏ –≤—ã —á–∞—Å—Ç–æ —Å–Ω–∏–º–∞—Ç—å –∏–ª–∏ –ø–æ–ø–æ–ª–Ω—è—Ç—å —Å—á–µ—Ç?'}
                        buttons={['‚úîÔ∏è –î–∞', '‚ùå –ù–µ—Ç']}
                        onClickHandler={nakopshetchoosestep3}
                    />
                )
            }


        ])
    }
    const nakopshetchoosestep3 = (info) => {
        if (info === '‚úîÔ∏è –î–∞') {
            setCounts(true)
        } else {
            setCounts(false)
        }
        console.log(info)
        setMessages(prev => [...prev,
            {sender: 'user-message', text: info},
            {
                sender: 'bot-message', component: (
                    <Buttoni first={'ü§î –ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–µ–µ?'}
                             buttons={['–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (–¥–æ 21,5 % –≥–æ–¥–æ–≤—ã—Ö)', '–ü—Ä–æ—Å—Ç—ã–µ —É—Å–ª–æ–≤–∏—è (19,5 % –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π)']}
                             onClickHandler={nakopshetchoosestep4}
                    />
                )
            }

        ])

    }
    const nakopshetchoosestep4 = (info) => {
        console.log(money, counts)
        const sms = info === '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ (–¥–æ 21,5 % –≥–æ–¥–æ–≤—ã—Ö)' ? '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è' : '–ü—Ä–æ—Å—Ç—ã–µ —É—Å–ª–æ–≤–∏—è'
        setMessages(prev => [...prev,
            {sender: 'user-message', text: sms},
        ])
        if (money && !counts && sms === '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è') {
            setMessages(prev => [...prev,
                {
                    sender: 'bot-message', component: (<>
                            <p>ü§ô –í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—è: Premium <br/> –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëâ <a
                                href="https://www.gazprombank.ru/personal/accounts/">–ó–¥–µ—Å—å</a></p>
                        </>

                    )
                },])
        }
        if (!money && !counts && sms === '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è') {
            setMessages(prev => [...prev,
                {
                    sender: 'bot-message', component: (<>
                            <p>ü§ô –í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—è: –ù–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–π —Å—á–µ—Ç <br/> –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëâ <a
                                href="https://www.gazprombank.ru/personal/accounts/">–ó–¥–µ—Å—å</a></p>
                        </>

                    )
                },])
        }
        if (counts && sms === '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è') {
            setMessages(prev => [...prev,
                {
                    sender: 'bot-message', component: (<>
                            <p>ü§ô –í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—è: –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ—Ü–µ–Ω—Ç <br/> –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëâ <a
                                href="https://www.gazprombank.ru/personal/accounts/">–ó–¥–µ—Å—å</a></p>
                        </>

                    )
                },])
        }
        if (sms === '–ü—Ä–æ—Å—Ç—ã–µ —É—Å–ª–æ–≤–∏—è') {
            setMessages(prev => [...prev,
                {
                    sender: 'bot-message', component: (<>
                            <p>ü§ô –í–∞–º –ø–æ–¥—Ö–æ–¥–∏—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—è: –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ—Ü–µ–Ω—Ç <br/> –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üëâ <a
                                href="https://www.gazprombank.ru/personal/accounts/">–ó–¥–µ—Å—å</a></p>
                        </>

                    )
                },])
        }
        setMessages(prev => [...prev,
            {
                sender: 'second-bot-message', component: (
                    <Buttoniany
                        first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />
                )
            }

        ])


    }
    const nakopschetinfo = (info) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: info},
            {
                sender: 'bot-message', component: (
                    <Deposit2/>
                )
            }, {
                sender: 'second-bot-message', component: (
                    <Buttoniany
                        first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />
                )
            }
        ])
    }
    const vklad = (text) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: text},
            {
                sender: 'bot-message', component: (
                    <>
                        <div className="promo-banner">
                            <h2>üíº –ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –æ—Ç–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥?</h2>
                            <p>
                                <strong>–í–∫–ª–∞–¥—ã</strong> –ø–æ–º–æ–≥–∞—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ <strong>—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤–∞—à–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è –≤
                                –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</strong>,
                                –Ω–æ –∏ <strong>–ø—Ä–∏—É–º–Ω–æ–∂–∏—Ç—å</strong> –∏—Ö –∑–∞ —Å—á—ë—Ç <strong>—Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö
                                –Ω–∞—á–∏—Å–ª–µ–Ω–∏–π</strong>.<br/>
                                –≠—Ç–æ <strong>–Ω–∞–¥—ë–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –±—É–¥—É—â–µ–µ</strong> –∏ <strong>–∑–∞—Å—Ç–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏
                                —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –≤–∞—Å</strong> ‚Äî –¥–∞–∂–µ –≤–æ —Å–Ω–µ! üåôüí∏
                            </p>
                        </div>
                        <Buttoniany
                            first={''}
                            buttons={['üéØ –ü–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å –≤–∫–ª–∞–¥', 'üìå –ö–∞—Ç–µ–≥–æ—Ä–∏–∏', '‚ú® –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞', 'üîô –ù–∞–∑–∞–¥']}
                            onClickHandler={[helpchoosevklad, categories, privileges, vkladiandscheta]}
                        />
                    </>

                )
            }
        ])
    }
    const helpchoosevklad = (text) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: text},
            {
                sender: 'bot-message', component: (
                    <EqualButtons
                        first={'üëç –í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—à—å –¥–µ—Ä–∂–∞—Ç—å –≤–∫–ª–∞–¥'}
                        buttons={['–†—É–±–ª–∏', '–Æ–∞–Ω–∏']}
                        onClickHandler={currency}
                        value={['–†—É–±–ª–∏', '–Æ–∞–Ω–∏']}
                    />

                )
            }
        ])
    }
    const currency = (voted) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: voted},
        ])
        if (voted === '–†—É–±–ª–∏') {
            point.Balance += 1
            point.Plus += 1
            point.Money += 1
            point.Kopit += 1
            point.Big += 1

        } else {
            point.Vozmozh += 1
        }
        setMessages(prev => [...prev,
            {
                sender: 'bot-message', component: (
                    <Buttoni
                        first={'üòä –ù–∞ –∫–∞–∫–æ–π —Å—Ä–æ–∫ –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞?'}
                        buttons={['1 - 3 –º–µ—Å', '4 - 7 –º–µ—Å', '8 –º–µ—Å - 3 –≥–æ–¥–∞']}
                        onClickHandler={times}
                    />
                )
            },

        ])


    }
    const times = (times) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: times},
        ])
        if (times === '1 - 3 –º–µ—Å' || times === '4 - 7 –º–µ—Å') {
            point.Balance += 1
            point.Money += 1
            point.Kopit += 1
            point.Plus += 1
        }
        setMessages(prev => [...prev,
            {
                sender: 'bot-message', component: (
                    <Buttoni
                        first={'üôÇ –ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç—ã?'}
                        buttons={['–ï–∂–µ–º–µ—Å—è—á–Ω–æ –Ω–∞ —Å—á–µ—Ç / –∫–∞—Ä—Ç—É', '–í –∫–æ–Ω—Ü–µ —Å—Ä–æ–∫–∞']}
                        onClickHandler={procents}
                    />
                )
            }
        ])
    }
    const procents = (procents) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: procents}
        ])
        if (procents === '–ï–∂–µ–º–µ—Å—è—á–Ω–æ –Ω–∞ —Å—á–µ—Ç/–∫–∞—Ä—Ç—É') {
            point.Balance += 1
        } else {
            point.Plus += 1
            point.Money += 1
            point.Kopit += 1
            point.Big += 1
        }
        setMessages(prev => [...prev,
            {
                sender: 'bot-message', component: (
                    <>
                        <div className="promo-banner">
                            <h2>üíº –ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ —É—Å–ª–æ–≤–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–¥–±–∞–≤–∫—É –∫ –±–∞–∑–æ–≤–æ–π
                                —Å—Ç–∞–≤–∫–µ?</h2>
                            <p>
                                1)–ù–∏–∫–∞–∫–∏—Ö —É—Å–ª–æ–≤–∏–π, —Ç–æ–ª—å–∫–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–≤–∫–∞ <br/>
                                2)–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å—Ä–µ–¥–Ω–∏–π –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ –¥–µ–±–µ—Ç–æ–≤–æ–π –∫–∞—Ä—Ç–µ <br/>
                                3)–ü–æ–¥–∫–ª—é—á–∏—Ç—å –æ–ø—Ü–∏—é ¬´–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è¬ª –≤ —Å–µ—Ä–≤–∏—Å–µ ¬´–ì–∞–∑–ø—Ä–æ–º –ë–æ–Ω—É—Å¬ª <br/>
                                4)–í–Ω–µ—Å—Ç–∏ ¬´–Ω–æ–≤—ã–µ –¥–µ–Ω—å–≥–∏¬ª (–Ω–µ –±—ã–ª–æ 30 –¥–Ω–µ–π –Ω–∞ –≤–∞—à–∏—Ö —Å—á–µ—Ç–∞—Ö) <br/>
                                5)–û—Ç–∫—Ä—ã—Ç—å –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ –∏ –±—ã—Ç—å –Ω–æ–≤—ã–º/–∑–∞—Ä–ø–ª–∞—Ç–Ω—ã–º/–ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º! ‚úçÔ∏èüëæ
                            </p>
                        </div>
                        <Buttoni first={''}
                                 buttons={['1', '2', '3', '4', '5']}
                                 onClickHandler={ysl}
                        />
                    </>


                )
            }
        ])
    }
    const ysl = (vote) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: vote}
        ]);

        if (vote === '1') {
            point.Big += 1;
        } else if (vote === '2') {
            point.Balance += 1;
        } else if (vote === '3') {
            point.Plus += 1;
        } else if (vote === '4') {
            point.Money += 1;
        } else {
            point.Kopit += 1;
        }

        const maxValue = Math.max(...Object.values(point));

        const itog = [];
        for (const key in point) {
            if (point[key] === maxValue) {
                itog.push(key);
            }
        }

        const user_itog = itog.map(key => pointnames[key]);

        console.log('üòâ –†–µ–∑—É–ª—å—Ç–∞—Ç:', user_itog);
        setMessages(prev => [...prev,
            {
                sender: 'bot-message', component: (
                    <>

                        {user_itog.map((key, itogi) => (
                            <>
                                <p>ü§ù –¢–µ–±–µ –ø–æ–¥—Ö–æ–¥—è—Ç —Ç–∞–∫–∏–µ –≤–∫–ª–∞–¥—ã –∫–∞–∫: {key}</p>
                                {key === '–ö–æ–ø–∏—Ç—å' ? <Vkladi choose={5}/> : null}
                                {key === '–†–∞—Å—à–∏—Ä—è–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏' ? <Vkladi choose={4}/> : null}
                                {key === '–ù–æ–≤—ã–µ –¥–µ–Ω—å–≥–∏' ? <Vkladi choose={3}/> : null}
                                {key === '–í –±–∞–ª–∞–Ω—Å–µ' ? <Vkladi choose={2}/> : null}
                                {key === '–í –ø–ª—é—Å–µ' ? <Vkladi choose={1}/> : null}
                            </>
                        ))
                        }

                        <p>–ü–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å <a
                            href="https://www.gazprombank.ru/personal/increase/deposits/">–∑–¥–µ—Å—å</a></p>
                    </>
                )
            }, {
                sender: 'second-bot-message', component: (
                    <Buttoniany
                        first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />
                )
            }


        ])
    };

    const categories = (text) => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: text},
            {
                sender: 'bot-message', component: (
                    <>
                        <p>–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ –Ω–∞—à–µ–º –±–∞–Ω–∫–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å üëâ <a
                            href="https://www.gazprombank.ru/personal/increase/deposits/">–ó–¥–µ—Å—å</a>
                        </p>

                    </>

                )
            }, {
                sender: 'second-bot-message', component: (
                    <Buttoniany
                        first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />

                )
            }
        ])
    }
    const privileges = (text) => {
        setMessages(prev => {
            return [
                ...prev,
                {sender: 'user-message', text},
                {
                    sender: 'bot-message',
                    component: (
                        <>
                            <Deposit/>
                        </>
                    )
                }, {
                    sender: 'second-bot-message', component: (
                        <Buttoniany
                            first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                            buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                            onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                        />
                    )
                }
            ];
        });
    };


    const trade_valuta = () => {
        setMessages(prev => [
            ...prev,
            {sender: 'user-message', text: '–û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã'},
            {
                sender: 'change-moneta', component: (<TradeCurrency/>)
            },
            {
                sender: 'second-bot-message', component: (
                    <Buttoniany
                        first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                        buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                        onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                    />
                )
            }
        ]);
    };

    const valuta = (country) => {
        setCountry(country)
        setMessages(prev => [
            ...prev,
            {sender: 'user-message', text: country},
            {sender: 'bot-message', text: '‚úçÔ∏è –ù–∞–ø–∏—à–∏ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏'},
        ]);
    };

    const Sendtoback = async (data) => {
        console.log(data.method)
        console.log(valutate, data.currency)
        try {
            const response = await axios.post(
                "http://127.0.0.1:8000/commission/—Åommision_calculation",
                {
                    currency: data.currency,
                    country: data.country,
                    method: data.method,
                    amount: Number(data.amount)
                },
                {
                    headers: {"Content-Type": "application/json"},
                }
            );

            console.log("–£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);

            setMessages(prev => [...prev,
                {sender: 'user-message', text: '–í—Å–µ –≤–µ—Ä–Ω–æ'},

                {
                    sender: 'Tabler', component: (
                        <Table data={response.data}/>
                    )
                }, {
                    sender: 'second-bot-message', component: (
                        <Buttoniany
                            first="üëÄ –ú–æ–∂–µ—Ç —Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å —Å —á–µ–º-—Ç–æ –¥—Ä—É–≥–∏–º?"
                            buttons={['üí∏ –ö–æ–º–∏—Å—Å–∏—è', 'üí± –û–±–º–µ–Ω –≤–∞–ª—é—Ç—ã', 'üè¶ –í–∫–ª–∞–¥—ã –∏ —Å—á–µ—Ç–∞']}
                            onClickHandler={[comissia, trade_valuta, vkladiandscheta]}
                        />
                    )
                }
            ]);

        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ 422:", error.response?.data || error.message);
            setMessages(prev => [...prev,
                {
                    sender: 'second-bot-message',
                    text: `üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –∫–æ–º–∏—Å—Å–∏–∏`
                },
                {
                    sender: 'second-bot-message', component: (
                        <>
                            <p>üí± –í—ã–±–µ—Ä–∏ –≤–∞–ª—é—Ç—É</p>
                            <Export func={countries} choose={2}/>
                        </>

                    )
                }
            ]);
        }
    };


    const Back = () => {
        setMessages(prev => [...prev,
            {sender: 'user-message', text: '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞–Ω–æ–≤–æ'}
        ])
        setBank('')
        setCountry('')
        setValutate('')
        setMessage('')
        comissia()

    }

    const bank = (bankik, summa) => {
        setMethod(paymentMethods[bankik]);
        setMessages(prev => [
            ...prev,
            {sender: 'user-message', text: bankik},
            {
                sender: 'bot-message',
                component: (
                    <>
                        <h3>‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–µ–≤–æ–¥–µ</h3>
                        <p>üíµ –í–∞–ª—é—Ç–∞: {valutauser}</p>
                        <p>üåç –°—Ç—Ä–∞–Ω–∞: {country}</p>
                        <p>üí∞ –°—É–º–º–∞: {summa}</p>
                        <p> üè¶ –ú–µ—Ç–æ–¥: {bankik}</p>
                        <button className="button" onClick={() => Sendtoback({
                            currency: valutate,
                            amount: summa,
                            method: paymentMethods[bankik],
                            country: country
                        })}>
                            –í—Å–µ –≤–µ—Ä–Ω–æ
                        </button>
                        <button className={'button'} onClick={Back}>–ó–∞–ø–æ–ª–Ω–∏—Ç—å
                            –∑–∞–Ω–æ–≤–æ
                        </button>
                    </>

                ),
            },
        ]);
    };
    const bankers = (msg) => {
        setMessages(prev => [
            ...prev,
            {
                sender: 'bot-message',
                component: (
                    <>
                        <p>üí≥ –í—ã–±–µ—Ä–∏ –º–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ </p>
                        <Export func={bank} choose={0} val2={msg}/>
                    </>
                ),
            },
        ]);
    }
    const handleSend = (e) => {
        e.preventDefault();
        const trimmed = input.trim();
        if (!trimmed) return;
        setMessages(prev => [...prev, {sender: 'user-message', text: trimmed}]);
        if (valutate && !message) {
            const msg = trimmed;
            if (!isNaN(msg) && isFinite(msg) && Number(msg) > 10 && Number(msg) < 1000000000 && country && msg[0] !== '0') {
                if (valutate && !message) {
                    setMessage(msg);
                    bankers(msg)
                }
            } else {
                setMessages(prev => [
                    ...prev,
                    {sender: 'bot-message', text: 'üòû –¢—ã –≤–≤–µ–ª –Ω–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑'},
                ]);
            }
        } else {
            setMessages(prev => {
                const lastComponent = [...prev].reverse().find(m => m.component)?.component;
                return [
                    ...prev,
                    {sender: 'bot-message', text: 'üò© –ü—Ä–æ—Å—Ç–∏, –ø–æ–∫–∞ –∑–∞—Ç—Ä—É–¥–Ω—è—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å'},
                    lastComponent && {sender: 'second-bot-message', component: lastComponent}
                ].filter(Boolean);
            });
        }
        setInput("");
    };
    return (
        <div>
            <Smska
                input={input}
                handleSend={handleSend}
                setInput={setInput}
                messages={messages}
                clear={ClearMessages}
            />
        </div>
    );
}