{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mosin\\\\PycharmProjects\\\\untitled4\\\\avavava\\\\frontend\\\\src\\\\components\\\\Dialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Buttoni from \"./Buttoni\";\nimport Smska from \"./Smska\";\nimport Buttoniany from \"./Buttoniany\";\nimport Export from \"./Export\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dialog({\n  yourmessage\n}) {\n  _s();\n  const [valutate, setValutate] = useState('');\n  const [message, setMessage] = useState('');\n  const [banker, setBank] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [country, setCountry] = useState('');\n  const [sums, setSums] = useState([]);\n  const comissia = () => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: 'Рассчитай комиссию'\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(Buttoni, {\n        first: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0432\\u0430\\u043B\\u044E\\u0442\\u0443\",\n        buttons: ['Рубли', 'Евро', 'Доллары'],\n        onClickHandler: valuta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }]);\n  };\n  useEffect(() => {\n    setMessages([{\n      sender: 'user',\n      text: yourmessage\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(Buttoniany, {\n        first: \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442, \\u0441 \\u0447\\u0435\\u043C \\u043A\\u043E\\u043D\\u043A\\u0440\\u0435\\u0442\\u043D\\u043E \\u0442\\u0435\\u0431\\u0435 \\u043F\\u043E\\u043C\\u043E\\u0447\\u044C?\",\n        buttons: ['Комиссия', 'Обмен валюты', 'Вклады'],\n        onClickHandler: [comissia, trade_valuta, trade_valuta]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }]);\n  }, []);\n  const countries = () => {\n    setMessages(prev => [...prev, {\n      sender: 'bot',\n      text: 'Выбери страну в которую хочешь сделать перевод'\n    }, {\n      sender: 'bot2',\n      component: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Export, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: 'button',\n          onClick: valuta,\n          children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true)\n    }]);\n  };\n  const trade_valuta = () => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: 'Обмен валюты'\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(Buttoni, {\n        first: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0432\\u0430\\u043B\\u044E\\u0442\\u0443 \\u0434\\u043B\\u044F \\u043E\\u0431\\u043C\\u0435\\u043D\\u0430\",\n        buttons: ['Рубли', 'Евро', 'Доллары'],\n        onClickHandler: trade_valuta_user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 44\n      }, this)\n    }]);\n  };\n  const trade_valuta_user = choose => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: choose\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(Buttoni, {\n        first: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0432 \\u043A\\u0430\\u043A\\u0443\\u044E \\u0432\\u0430\\u043B\\u044E\\u0442\\u0443 \\u0442\\u044B \\u0445\\u043E\\u0447\\u0435\\u0448\\u044C \\u043A\\u043E\\u043D\\u0432\\u0435\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n        buttons: ['Рубли', 'Евро', 'Доллары'],\n        onClickHandler: trade_valuta_bot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 22\n      }, this)\n    }]);\n  };\n  const trade_valuta_bot = choose => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: choose\n    }, {\n      sender: 'bot',\n      text: 'Введи сумму которую хочешь перевести'\n    }]);\n  };\n  const valuta = val => {\n    setValutate(val);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: val\n    }, {\n      sender: 'bot',\n      text: 'Напиши сумму которую ты хочешь перевести'\n    }]);\n  };\n  const handleSend = e => {\n    e.preventDefault();\n  };\n\n  // Отправка на backend\n  const Sendtoback = async () => {\n    try {\n      const data = {\n        valutate,\n        banker,\n        message\n      };\n      const response = await axios.post(\"http://127.0.0.1:8000/\", data, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Успешный ответ и данные отправлены\", response.data);\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n    }\n  };\n  const bank = bankik => {\n    setBank(bankik);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: bankik\n    }, {\n      sender: 'bot',\n      text: `Давайте полностью проверим информацию:\\n` + `Валюта: ${valutate}\\n` + `Сумма: ${undefined}\\n` + `Банк: ${bankik}`\n    }, {\n      sender: 'bot2',\n      component: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: Sendtoback,\n        children: \"\\u0412\\u0441\\u0435 \\u0432\\u0435\\u0440\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this)\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Smska, {\n      input: input,\n      handleSend: handleSend,\n      setInput: setInput,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.location.reload(),\n      className: \"cleaning\",\n      children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0447\\u0430\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Dialog, \"NG4NottProBCmWEojdR/4svi5Aw=\");\n_c = Dialog;\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["React","useState","useEffect","axios","Buttoni","Smska","Buttoniany","Export","jsxDEV","_jsxDEV","Fragment","_Fragment","Dialog","yourmessage","_s","valutate","setValutate","message","setMessage","banker","setBank","messages","setMessages","input","setInput","country","setCountry","sums","setSums","comissia","prev","sender","text","component","first","buttons","onClickHandler","valuta","fileName","_jsxFileName","lineNumber","columnNumber","trade_valuta","countries","children","className","onClick","trade_valuta_user","choose","trade_valuta_bot","val","handleSend","e","preventDefault","Sendtoback","data","response","post","headers","console","log","error","bank","bankik","undefined","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/mosin/PycharmProjects/untitled4/avavava/frontend/src/components/Dialog.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Buttoni from \"./Buttoni\";\r\nimport Smska from \"./Smska\";\r\nimport Buttoniany from \"./Buttoniany\";\r\nimport Export from \"./Export\";\r\n\r\nexport default function Dialog({yourmessage}) {\r\n    const [valutate, setValutate] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [banker, setBank] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [country, setCountry] = useState('');\r\n    const [sums, setSums] = useState([]);\r\n    const comissia = () => {\r\n        setMessages(prev => [\r\n            ...prev,\r\n            {sender: 'user', text: 'Рассчитай комиссию'},\r\n            {\r\n                sender: 'bot',\r\n                component: (\r\n                    <Buttoni\r\n                        first=\"Выбери валюту\"\r\n                        buttons={['Рубли', 'Евро', 'Доллары']}\r\n                        onClickHandler={valuta}\r\n                    />\r\n                ),\r\n            },\r\n        ]);\r\n    };\r\n    useEffect(() => {\r\n        setMessages([\r\n            {sender: 'user', text: yourmessage},\r\n            {\r\n                sender: 'bot',\r\n                component: (\r\n                    <Buttoniany\r\n                        first=\"Привет, с чем конкретно тебе помочь?\"\r\n                        buttons={['Комиссия', 'Обмен валюты', 'Вклады']}\r\n                        onClickHandler={[comissia, trade_valuta, trade_valuta]}\r\n                    />\r\n                ),\r\n            },\r\n        ]);\r\n    }, []);\r\n    const countries = () => {\r\n        setMessages(prev => [...prev,\r\n            {sender: 'bot',text:'Выбери страну в которую хочешь сделать перевод'},\r\n            {sender:'bot2',component: (<>\r\n                        <Export/><button className={'button'} onClick={valuta}>Подтвердить</button>\r\n                </>\r\n                )}\r\n        ])\r\n\r\n\r\n    }\r\n\r\n    const trade_valuta = () => {\r\n        setMessages(prev => [...prev,\r\n            {sender: 'user', text: 'Обмен валюты'},\r\n            {\r\n                sender: 'bot', component: (<Buttoni\r\n                    first=\"Выбери валюту для обмена\"\r\n                    buttons={['Рубли', 'Евро', 'Доллары']}\r\n                    onClickHandler={trade_valuta_user}\r\n                />)\r\n            }\r\n\r\n        ])\r\n    }\r\n    const trade_valuta_user = (choose) => {\r\n        setMessages(prev => [...prev,\r\n            {sender: 'user', text: choose},\r\n            {\r\n                sender: 'bot', component: (\r\n                    (<Buttoni\r\n                        first=\"Выбери в какую валюту ты хочешь конвертировать\"\r\n                        buttons={['Рубли', 'Евро', 'Доллары']}\r\n                        onClickHandler={trade_valuta_bot}\r\n                    />)\r\n\r\n                )\r\n            }\r\n        ])\r\n    }\r\n    const trade_valuta_bot = (choose) => {\r\n        setMessages(prev => [...prev,\r\n            {sender: 'user', text: choose},\r\n            {sender: 'bot', text: 'Введи сумму которую хочешь перевести'}\r\n\r\n        ])\r\n    }\r\n\r\n    const valuta = (val) => {\r\n        setValutate(val);\r\n        setMessages(prev => [\r\n            ...prev,\r\n            {sender: 'user', text: val},\r\n            {sender: 'bot', text: 'Напиши сумму которую ты хочешь перевести'},\r\n        ]);\r\n    };\r\n\r\n\r\n  const handleSend = (e) => {\r\n      e.preventDefault();\r\n      \r\n\r\n  }\r\n\r\n    // Отправка на backend\r\n    const Sendtoback = async () => {\r\n        try {\r\n            const data = {valutate, banker, message};\r\n            const response = await axios.post(\"http://127.0.0.1:8000/\", data, {\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n            });\r\n            console.log(\"Успешный ответ и данные отправлены\", response.data);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при отправке данных:\", error);\r\n        }\r\n    };\r\n    const bank = (bankik) => {\r\n        setBank(bankik);\r\n        setMessages(prev => [\r\n            ...prev,\r\n            {sender: 'user', text: bankik},\r\n            {\r\n                sender: 'bot',\r\n                text:\r\n                    `Давайте полностью проверим информацию:\\n` +\r\n                    `Валюта: ${valutate}\\n` +\r\n                    `Сумма: ${undefined}\\n` +\r\n                    `Банк: ${bankik}`,\r\n            },\r\n            {\r\n                sender: 'bot2',\r\n                component: (\r\n                    <button className=\"button\" onClick={Sendtoback}>\r\n                        Все верно\r\n                    </button>\r\n                ),\r\n            },\r\n        ]);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Smska\r\n                input={input}\r\n                handleSend={handleSend}\r\n                setInput={setInput}\r\n                messages={messages}\r\n            />\r\n            <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"cleaning\"\r\n            >\r\n                Очистить чат\r\n            </button>\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}