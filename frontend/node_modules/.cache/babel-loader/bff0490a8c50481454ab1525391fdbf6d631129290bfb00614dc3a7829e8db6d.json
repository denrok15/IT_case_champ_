{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mosin\\\\PycharmProjects\\\\untitled4\\\\avavava\\\\frontend\\\\src\\\\components\\\\Dialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Buttoni from \"./Buttoni\";\nimport Smska from \"./Smska\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dialog({\n  yourmessage\n}) {\n  _s();\n  const [valutate, setValutate] = useState('');\n  const [message, setMessage] = useState('');\n  const [banker, setBank] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [country, setCountry] = useState('');\n  useEffect(() => {\n    localStorage.setItem('chat_messages', JSON.stringify(messages));\n  }, [messages]);\n  const comissia = () => {\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: 'Рассчитай комиссию'\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(Buttoni, {\n        first: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0432\\u0430\\u043B\\u044E\\u0442\\u0443\",\n        buttons: ['Рубли', 'Евро', 'Доллары'],\n        onClickHandler: valuta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }]);\n  };\n  useEffect(() => {\n    const savedMessages = localStorage.getItem('chat_messages');\n    if (savedMessages) {\n      setMessages(JSON.parse(savedMessages));\n    } else {\n      setMessages([{\n        sender: 'user',\n        text: yourmessage\n      }, {\n        sender: 'bot',\n        component: /*#__PURE__*/_jsxDEV(Buttoni, {\n          first: \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442, \\u0441 \\u0447\\u0435\\u043C \\u043A\\u043E\\u043D\\u043A\\u0440\\u0435\\u0442\\u043D\\u043E \\u0442\\u0435\\u0431\\u0435 \\u043F\\u043E\\u043C\\u043E\\u0447\\u044C?\",\n          buttons: ['Комиссия', 'Обмен валюты', 'Вклады'],\n          onClickHandler: comissia\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }]);\n    }\n  }, []);\n  const valuta = val => {\n    setValutate(val);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: val\n    }, {\n      sender: 'bot',\n      text: 'Напиши сумму которую ты хочешь перевести'\n    }]);\n  };\n  const handleSend = e => {\n    e.preventDefault();\n    const trimmed = input.trim();\n    if (!trimmed) return;\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: trimmed\n    }]);\n    if (valutate && !message) {\n      setMessage(trimmed);\n      if (!isNaN(trimmed) && isFinite(trimmed) && Number(trimmed) > 0) {\n        setMessages(prev => [...prev, {\n          sender: 'bot',\n          component: /*#__PURE__*/_jsxDEV(Buttoni, {\n            first: 'Выбери банк',\n            buttons: ['Сбербанк', 'Т-банк', 'Совкомбанк'],\n            onClickHandler: bank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this)\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: 'bot',\n          text: 'Ты ввел неверное число'\n        }]);\n      }\n    }\n    setInput(\"\");\n  };\n\n  // Отправка на backend\n  const Sendtoback = async () => {\n    try {\n      const data = {\n        valutate,\n        banker,\n        message\n      };\n      const response = await axios.post(\"http://127.0.0.1:8000/\", data, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      console.log(\"Успешный ответ и данные отправлены\", response.data);\n    } catch (error) {\n      console.error(\"Ошибка при отправке данных:\", error);\n    }\n  };\n  const bank = bankik => {\n    setBank(bankik);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: bankik\n    }, {\n      sender: 'bot',\n      text: `Давайте полностью проверим информацию:\\n` + `Валюта: ${valutate}\\n` + `Сумма: ${message}\\n` + `Банк: ${bankik}`\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: Sendtoback,\n        children: \"\\u0412\\u0441\\u0435 \\u0432\\u0435\\u0440\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Smska, {\n      input: input,\n      handleSend: handleSend,\n      setInput: setInput,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        localStorage.removeItem('chat_messages');\n        window.location.reload();\n      },\n      className: \"cleaning\",\n      children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435 \\u043D\\u0430\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Dialog, \"/JJ89h3O6+fzWQv5v4+Qtl4EuOo=\");\n_c = Dialog;\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["React","useState","useEffect","axios","Buttoni","Smska","jsxDEV","_jsxDEV","Fragment","_Fragment","Dialog","yourmessage","_s","valutate","setValutate","message","setMessage","banker","setBank","messages","setMessages","input","setInput","country","setCountry","localStorage","setItem","JSON","stringify","comissia","prev","sender","text","component","first","buttons","onClickHandler","valuta","fileName","_jsxFileName","lineNumber","columnNumber","savedMessages","getItem","parse","val","handleSend","e","preventDefault","trimmed","trim","isNaN","isFinite","Number","bank","Sendtoback","data","response","post","headers","console","log","error","bankik","className","onClick","children","removeItem","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/mosin/PycharmProjects/untitled4/avavava/frontend/src/components/Dialog.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Buttoni from \"./Buttoni\";\r\nimport Smska from \"./Smska\";\r\n\r\nexport default function Dialog({yourmessage}) {\r\n    const [valutate, setValutate] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [banker, setBank] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [country, setCountry] = useState('');\r\n    useEffect(() => {\r\n        localStorage.setItem('chat_messages', JSON.stringify(messages));\r\n    }, [messages]);\r\n    const comissia = () => {\r\n        setMessages(prev => [\r\n            ...prev,\r\n            {sender: 'user', text: 'Рассчитай комиссию'},\r\n            {\r\n                sender: 'bot',\r\n                component: (\r\n                    <Buttoni\r\n                        first=\"Выбери валюту\"\r\n                        buttons={['Рубли', 'Евро', 'Доллары']}\r\n                        onClickHandler={valuta}\r\n                    />\r\n                ),\r\n            },\r\n        ]);\r\n    };\r\n    useEffect(() => {\r\n        const savedMessages = localStorage.getItem('chat_messages');\r\n        if (savedMessages) {\r\n            setMessages(JSON.parse(savedMessages));\r\n        } else {\r\n            setMessages([\r\n                {sender: 'user', text: yourmessage},\r\n                {\r\n                    sender: 'bot',\r\n                    component: (\r\n                        <Buttoni\r\n                            first=\"Привет, с чем конкретно тебе помочь?\"\r\n                            buttons={['Комиссия', 'Обмен валюты', 'Вклады']}\r\n                            onClickHandler={comissia}\r\n                        />\r\n                    ),\r\n                },\r\n            ]);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const valuta = (val) => {\r\n        setValutate(val);\r\n        setMessages(prev => [\r\n            ...prev,\r\n            {sender: 'user', text: val},\r\n            {sender: 'bot', text: 'Напиши сумму которую ты хочешь перевести'},\r\n        ]);\r\n    };\r\n\r\n\r\n    const handleSend = (e) => {\r\n        e.preventDefault();\r\n        const trimmed = input.trim();\r\n        if (!trimmed) return;\r\n        setMessages(prev => [...prev, {sender: 'user', text: trimmed}]);\r\n\r\n        if (valutate && !message) {\r\n            setMessage(trimmed);\r\n\r\n            if (!isNaN(trimmed) && isFinite(trimmed) && Number(trimmed) > 0) {\r\n                setMessages(prev => [\r\n                    ...prev,\r\n                    {\r\n                        sender: 'bot',\r\n                        component: (\r\n                            <Buttoni\r\n                                first={'Выбери банк'}\r\n                                buttons={['Сбербанк', 'Т-банк', 'Совкомбанк']}\r\n                                onClickHandler={bank}\r\n                            />\r\n                        ),\r\n                    },\r\n                ]);\r\n            } else {\r\n                setMessages(prev => [\r\n                    ...prev,\r\n                    {sender: 'bot', text: 'Ты ввел неверное число'},\r\n                ]);\r\n            }\r\n        }\r\n\r\n        setInput(\"\");\r\n    };\r\n\r\n    // Отправка на backend\r\n    const Sendtoback = async () => {\r\n        try {\r\n            const data = {valutate, banker, message};\r\n            const response = await axios.post(\"http://127.0.0.1:8000/\", data, {\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n            });\r\n            console.log(\"Успешный ответ и данные отправлены\", response.data);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при отправке данных:\", error);\r\n        }\r\n    };\r\n    const bank = (bankik) => {\r\n        setBank(bankik);\r\n        setMessages(prev => [\r\n            ...prev,\r\n            {sender: 'user', text: bankik},\r\n            {\r\n                sender: 'bot',\r\n                text:\r\n                    `Давайте полностью проверим информацию:\\n` +\r\n                    `Валюта: ${valutate}\\n` +\r\n                    `Сумма: ${message}\\n` +\r\n                    `Банк: ${bankik}`,\r\n            },\r\n            {\r\n                sender: 'bot',\r\n                component: (\r\n                    <button className=\"button\" onClick={Sendtoback}>\r\n                        Все верно\r\n                    </button>\r\n                ),\r\n            },\r\n        ]);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Smska\r\n                input={input}\r\n                handleSend={handleSend}\r\n                setInput={setInput}\r\n                messages={messages}\r\n            />\r\n            <button\r\n                onClick={() => {\r\n                    localStorage.removeItem('chat_messages');\r\n                    window.location.reload()}}\r\n                className=\"cleaning\"\r\n            >\r\n                Очистить все нах\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}