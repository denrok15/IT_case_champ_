{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mosin\\\\PycharmProjects\\\\untitled4\\\\avavava\\\\frontend\\\\src\\\\components\\\\Dialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Buttoni from './Buttoni';\nimport Smska from './Smska';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dialog({\n  yourmessage\n}) {\n  _s();\n  const [flag, setFlag] = useState(false);\n  const [flag2, setFlag2] = useState(false);\n  const [flag3, setFlag3] = useState(false);\n  const [valutate, setValutate] = useState('');\n  const [message, setMessage] = useState('');\n  const [banker, setBanker] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    // Первое сообщение от пользователя и приветствие от бота\n    setMessages([{\n      sender: 'user',\n      text: yourmessage\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(Buttoni, {\n        first: \"\\u041F\\u0440\\u0438\\u0432\\u0435\\u0442, \\u0441 \\u0447\\u0435\\u043C \\u043A\\u043E\\u043D\\u043A\\u0440\\u0435\\u0442\\u043D\\u043E \\u0442\\u0435\\u0431\\u0435 \\u043F\\u043E\\u043C\\u043E\\u0447\\u044C?\",\n        buttons: ['Комиссия', 'Обмен валюты', 'Че-то еще'],\n        onClickHandler: comissia\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)\n    }]);\n  }, []);\n  function comissia() {\n    if (flag) return console.log('Уже нажато');\n    setFlag(true);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: 'Рассчитай комиссию'\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(Buttoni, {\n        first: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0432\\u0430\\u043B\\u044E\\u0442\\u0443\",\n        buttons: ['Рубли', 'Евро', 'Доллары'],\n        onClickHandler: valuta\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }]);\n  }\n  function valuta(valida) {\n    if (flag2) return;\n    setValutate(valida);\n    setFlag2(true);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: valida\n    }, {\n      sender: 'bot',\n      text: 'Напиши сумму которую ты хочешь перевести'\n    }]);\n  }\n  function bank(bankik) {\n    if (flag3) return;\n    setBanker(bankik);\n    setFlag3(true);\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: bankik\n    }, {\n      sender: 'bot',\n      text: 'Давайте полностью проверим информацию:\\n' + `Валюта: ${valutate}\\nСумма: ${message}\\nБанк: ${bankik}`\n    }, {\n      sender: 'bot',\n      component: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: Sendtoback,\n        children: \"\\u0412\\u0441\\u0435 \\u0432\\u0435\\u0440\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)\n    }]);\n  }\n  const Sendtoback = async () => {\n    const data = {\n      valutate,\n      banker,\n      message\n    };\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/', data, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Успешно отправлено:', response.data);\n    } catch (error) {\n      console.error('Ошибка при отправке:', error);\n    }\n  };\n  const handleSend = async event => {\n    event.preventDefault();\n    if (input.trim() === '') return;\n    setMessages(prev => [...prev, {\n      sender: 'user',\n      text: input\n    }]);\n    if (flag2) {\n      setMessage(input);\n      if (!isNaN(input) && isFinite(input) && Number(input) > 0) {\n        setMessages(prev => [...prev, {\n          sender: 'bot',\n          component: /*#__PURE__*/_jsxDEV(Buttoni, {\n            first: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0431\\u0430\\u043D\\u043A\",\n            buttons: ['Сбербанк', 'Т-банк', 'Совкомбанк'],\n            onClickHandler: bank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          sender: 'bot',\n          text: 'Ты ввел неверное число'\n        }]);\n      }\n    }\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender === 'user' ? 'user' : 'bot',\n        children: [msg.text && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 38\n        }, this), msg.component && msg.component]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Smska, {\n        input: input,\n        handleSend: handleSend,\n        setInput: setInput,\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.location.reload(),\n      className: \"cleaning\",\n      children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435 \\u043D\\u0430\\u0445\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Dialog, \"zMyQxuYlB0tLlHp7PDO7LwQf6nw=\");\n_c = Dialog;\nvar _c;\n$RefreshReg$(_c, \"Dialog\");","map":{"version":3,"names":["React","useState","useEffect","axios","Buttoni","Smska","jsxDEV","_jsxDEV","Fragment","_Fragment","Dialog","yourmessage","_s","flag","setFlag","flag2","setFlag2","flag3","setFlag3","valutate","setValutate","message","setMessage","banker","setBanker","messages","setMessages","input","setInput","sender","text","component","first","buttons","onClickHandler","comissia","fileName","_jsxFileName","lineNumber","columnNumber","console","log","prev","valuta","valida","bank","bankik","className","onClick","Sendtoback","children","data","response","post","headers","error","handleSend","event","preventDefault","trim","isNaN","isFinite","Number","map","msg","index","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/mosin/PycharmProjects/untitled4/avavava/frontend/src/components/Dialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Buttoni from './Buttoni';\r\nimport Smska from './Smska';\r\n\r\nexport default function Dialog({ yourmessage }) {\r\n    const [flag, setFlag] = useState(false);\r\n    const [flag2, setFlag2] = useState(false);\r\n    const [flag3, setFlag3] = useState(false);\r\n    const [valutate, setValutate] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [banker, setBanker] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Первое сообщение от пользователя и приветствие от бота\r\n        setMessages([\r\n            { sender: 'user', text: yourmessage },\r\n            {\r\n                sender: 'bot',\r\n                component: (\r\n                    <Buttoni\r\n                        first=\"Привет, с чем конкретно тебе помочь?\"\r\n                        buttons={['Комиссия', 'Обмен валюты', 'Че-то еще']}\r\n                        onClickHandler={comissia}\r\n                    />\r\n                ),\r\n            },\r\n        ]);\r\n    }, []);\r\n\r\n    function comissia() {\r\n        if (flag) return console.log('Уже нажато');\r\n        setFlag(true);\r\n        setMessages(prev => [\r\n            ...prev,\r\n            { sender: 'user', text: 'Рассчитай комиссию' },\r\n            {\r\n                sender: 'bot',\r\n                component: (\r\n                    <Buttoni\r\n                        first=\"Выбери валюту\"\r\n                        buttons={['Рубли', 'Евро', 'Доллары']}\r\n                        onClickHandler={valuta}\r\n                    />\r\n                ),\r\n            },\r\n        ]);\r\n    }\r\n\r\n    function valuta(valida) {\r\n        if (flag2) return;\r\n        setValutate(valida);\r\n        setFlag2(true);\r\n\r\n        setMessages(prev => [\r\n            ...prev,\r\n            { sender: 'user', text: valida },\r\n            { sender: 'bot', text: 'Напиши сумму которую ты хочешь перевести' },\r\n        ]);\r\n    }\r\n\r\n    function bank(bankik) {\r\n        if (flag3) return;\r\n        setBanker(bankik);\r\n        setFlag3(true);\r\n\r\n        setMessages(prev => [\r\n            ...prev,\r\n            { sender: 'user', text: bankik },\r\n            {\r\n                sender: 'bot',\r\n                text: 'Давайте полностью проверим информацию:\\n' +\r\n                    `Валюта: ${valutate}\\nСумма: ${message}\\nБанк: ${bankik}`,\r\n            },\r\n            {\r\n                sender: 'bot',\r\n                component: (\r\n                    <button className=\"button\" onClick={Sendtoback}>\r\n                        Все верно\r\n                    </button>\r\n                ),\r\n            },\r\n        ]);\r\n    }\r\n\r\n    const Sendtoback = async () => {\r\n        const data = { valutate, banker, message };\r\n        try {\r\n            const response = await axios.post('http://127.0.0.1:8000/', data, {\r\n                headers: { 'Content-Type': 'application/json' },\r\n            });\r\n            console.log('Успешно отправлено:', response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка при отправке:', error);\r\n        }\r\n    };\r\n\r\n    const handleSend = async (event) => {\r\n        event.preventDefault();\r\n        if (input.trim() === '') return;\r\n\r\n        setMessages(prev => [...prev, { sender: 'user', text: input }]);\r\n\r\n        if (flag2) {\r\n            setMessage(input);\r\n            if (!isNaN(input) && isFinite(input) && Number(input) > 0) {\r\n                setMessages(prev => [\r\n                    ...prev,\r\n                    {\r\n                        sender: 'bot',\r\n                        component: (\r\n                            <Buttoni\r\n                                first=\"Выбери банк\"\r\n                                buttons={['Сбербанк', 'Т-банк', 'Совкомбанк']}\r\n                                onClickHandler={bank}\r\n                            />\r\n                        ),\r\n                    },\r\n                ]);\r\n            } else {\r\n                setMessages(prev => [\r\n                    ...prev,\r\n                    { sender: 'bot', text: 'Ты ввел неверное число' },\r\n                ]);\r\n            }\r\n        }\r\n\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"chat-container\">\r\n                {messages.map((msg, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={msg.sender === 'user' ? 'user' : 'bot'}\r\n                    >\r\n                        {msg.text && <p>{msg.text}</p>}\r\n                        {msg.component && msg.component}\r\n                    </div>\r\n                ))}\r\n\r\n                <Smska\r\n                    input={input}\r\n                    handleSend={handleSend}\r\n                    setInput={setInput}\r\n                    messages={messages}\r\n                />\r\n            </div>\r\n            <button\r\n                onClick={() => window.location.reload()}\r\n                className=\"cleaning\"\r\n            >\r\n                Очистить все нах\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}